        ___
       __H__
 ___ ___[,]_____ ___ ___  {1.2.10#stable}
|_ -| . ["]     | .'| . |
|___|_  [.]_|_|_|__,|  _|
      |_|V          |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting at 21:20:32

[21:20:33] [INFO] testing connection to the target URL
[21:20:33] [CRITICAL] previous heuristics detected that the target is protected by some kind of WAF/IPS
[21:20:33] [INFO] testing if the target URL content is stable
[21:20:34] [WARNING] target URL content is not stable (i.e. content differs). sqlmap will base the page comparison on a sequence matcher. If no dynamic nor injectable parameters are detected, or in case of junk results, refer to user's manual paragraph 'Page comparison'
how do you want to proceed? [(C)ontinue/(s)tring/(r)egex/(q)uit] [21:20:38] [INFO] skipping anti-CSRF token parameter 'csrf_token'
[21:20:38] [INFO] testing if POST parameter 'userid' is dynamic
[21:20:38] [WARNING] POST parameter 'userid' does not appear to be dynamic
[21:20:38] [WARNING] heuristic (basic) test shows that POST parameter 'userid' might not be injectable
[21:20:38] [INFO] testing for SQL injection on POST parameter 'userid'
[21:20:39] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[21:20:39] [WARNING] reflective value(s) found and filtering out
[21:20:40] [INFO] testing 'Boolean-based blind - Parameter replace (original value)'
[21:20:40] [INFO] testing 'MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'
[21:20:40] [INFO] testing 'PostgreSQL AND error-based - WHERE or HAVING clause'
[21:20:40] [INFO] testing 'Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)'
[21:20:41] [INFO] testing 'Oracle AND error-based - WHERE or HAVING clause (XMLType)'
[21:20:41] [INFO] testing 'MySQL >= 5.0 error-based - Parameter replace (FLOOR)'
[21:20:41] [INFO] testing 'MySQL inline queries'
[21:20:41] [INFO] testing 'PostgreSQL inline queries'
[21:20:41] [INFO] testing 'Microsoft SQL Server/Sybase inline queries'
[21:20:41] [INFO] testing 'PostgreSQL > 8.1 stacked queries (comment)'
[21:20:41] [INFO] testing 'Microsoft SQL Server/Sybase stacked queries (comment)'
[21:20:42] [INFO] testing 'Oracle stacked queries (DBMS_PIPE.RECEIVE_MESSAGE - comment)'
[21:20:42] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind'
[21:20:42] [INFO] testing 'PostgreSQL > 8.1 AND time-based blind'
[21:20:42] [INFO] testing 'Microsoft SQL Server/Sybase time-based blind (IF)'
[21:20:43] [INFO] testing 'Oracle AND time-based blind'
[21:20:43] [INFO] testing 'Generic UNION query (NULL) - 1 to 10 columns'
[21:20:47] [INFO] target URL appears to be UNION injectable with 7 columns
[21:20:47] [WARNING] applying generic concatenation (CONCAT)
injection not exploitable with NULL values. Do you want to try with a random integer value for option '--union-char'? [Y/n] [21:21:42] [WARNING] if UNION based SQL injection is not detected, please consider forcing the back-end DBMS (e.g. '--dbms=mysql') 
[21:21:43] [WARNING] POST parameter 'userid' does not seem to be injectable
[21:21:43] [CRITICAL] all tested parameters do not appear to be injectable. Try to increase values for '--level'/'--risk' options if you wish to perform more tests. If you suspect that there is some kind of protection mechanism involved (e.g. WAF) maybe you could try to use option '--tamper' (e.g. '--tamper=space2comment')

[*] shutting down at 21:21:43

